services:
  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.9.2
    restart: unless-stopped
    environment:
      ZOO_CFG_EXTRA: clientPort=2181
      ZOO_4LW_COMMANDS_WHITELIST: '*'
    volumes:
      - /data/zookeeper/data:/data
      - /data/zookeeper/datalog:/datalog
    ports:
      - 2181:2181

  kafka1:
    container_name: kafka1
    image: debezium/kafka:2.7.3.Final
    depends_on: [zookeeper]
    restart: unless-stopped
    environment:
      NODE_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CFG_LISTENERS: "CLIENT://:19092,EXTERNAL://:9092"
      KAFKA_CFG_ADVERTISED_LISTENERS: "CLIENT://:19092,EXTERNAL://10.21.33.108:9092"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT
      HEAP_OPTS: '-Xmx1G -Xms1G'
      KAFKA_NUM_NETWORK_THREADS: 8
      KAFKA_NUM_IO_THREADS: 16
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 1048576
      KAFKA_SOCKET_SEND_BUFFER_BYTES: 1048576
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 1073741824
      KAFKA_NUM_REPLICA_FETCHERS: 8
      KAFKA_JMX_PORT: 9991  # JMX port
      KAFKA_JMX_HOST: 10.21.33.108
      KAFKA_JMX_OPTS: '-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9991 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false'
    ports:
      - 9092:9092
      - 9991:9991  # Expose JMX port
    volumes:
      - /data/kafka1:/kafka/data

  kafka2:
    container_name: kafka2
    image: debezium/kafka:2.7.3.Final
    depends_on: [zookeeper]
    restart: unless-stopped
    environment:
      NODE_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CFG_LISTENERS: "CLIENT://:19093,EXTERNAL://:9093"
      KAFKA_CFG_ADVERTISED_LISTENERS: "CLIENT://:19093,EXTERNAL://10.21.33.108:9093"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT
      HEAP_OPTS: '-Xmx1G -Xms1G'
      KAFKA_NUM_NETWORK_THREADS: 8
      KAFKA_NUM_IO_THREADS: 16
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 1048576
      KAFKA_SOCKET_SEND_BUFFER_BYTES: 1048576
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 1073741824
      KAFKA_NUM_REPLICA_FETCHERS: 8
      KAFKA_JMX_PORT: 9992
      KAFKA_JMX_HOST: 10.21.33.108
      KAFKA_JMX_OPTS: '-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9992 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false'
    ports:
      - 9093:9093
      - 9992:9992  # Expose JMX port
    volumes:
      - /data/kafka2:/kafka/data

  kafka3:
    container_name: kafka3
    image: debezium/kafka:2.7.3.Final
    depends_on: [zookeeper]
    restart: unless-stopped
    environment:
      NODE_ID: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_CFG_LISTENERS: "CLIENT://:19094,EXTERNAL://:9094"
      KAFKA_CFG_ADVERTISED_LISTENERS: "CLIENT://:19094,EXTERNAL://10.21.33.108:9094"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT"
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: CLIENT
      HEAP_OPTS: '-Xmx1G -Xms1G'
      KAFKA_NUM_NETWORK_THREADS: 8
      KAFKA_NUM_IO_THREADS: 16
      KAFKA_SOCKET_RECEIVE_BUFFER_BYTES: 1048576
      KAFKA_SOCKET_SEND_BUFFER_BYTES: 1048576
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 1073741824
      KAFKA_NUM_REPLICA_FETCHERS: 8
      KAFKA_JMX_PORT: 9993
      KAFKA_JMX_HOST: 10.21.33.108
      KAFKA_JMX_OPTS: '-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9993 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false'
    ports:
      - 9094:9094
      - 9993:9993  # Expose JMX port
    volumes:
      - /data/kafka3:/kafka/data

  schema-registry:
    container_name: schema-registry
    image: confluentinc/cp-schema-registry:latest
    depends_on: [zookeeper, kafka1, kafka2, kafka3]
    restart: unless-stopped
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka1:9092,PLAINTEXT://kafka2:9093,PLAINTEXT://kafka3:9094'
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    ports:
      - 8081:8081

  debezium:
    container_name: debezium
    image: debezium/connect-base
    depends_on: [zookeeper, kafka1, kafka2, kafka3, schema-registry]
    environment:
      BOOTSTRAP_SERVERS: "kafka1:9092,kafka2:9093,kafka3:9094"
      GROUP_ID: 32204
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      HOST_NAME: 10.21.33.108
      ADVERTISED_HOST_NAME: 10.21.33.108
        #KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
        #VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    volumes:
      - /data/jar/:/kafka/connect/
    ports:
      - 8083:8083

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    depends_on: [zookeeper, kafka1, kafka2, kafka3, debezium]
    ports:
      - 8090:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'
      KAFKA_CLUSTERS_0_NAME: otpapp-debezium-staging
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka1:9092,kafka2:9093,kafka3:9094"
      KAFKA_CLUSTERS_0_ZOOKEEPER: "zookeeper:2181"
      KAFKA_CLUSTERS_0_METRICS_PORT: 9991
      KAFKA_CLUSTERS_0_METRICS_TYPE: JMX
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_NAME: debezium
      KAFKA_CLUSTERS_0_KAFKACONNECT_0_ADDRESS: 'http://debezium:8083'
      KAFKA_CLUSTERS_0_SCHEMAREGISTRY: 'http://schema-registry:8081'


  kafka-exporter:
    container_name: kafka-exporter
    image: danielqsj/kafka-exporter
    depends_on: [zookeeper, kafka1, kafka2, kafka3, debezium, kafka-ui]
    restart: unless-stopped
    command: ["--kafka.server=kafka1:9092", "--zookeeper.server=debezium:2181"]
    ports:
      - 9308:9308
